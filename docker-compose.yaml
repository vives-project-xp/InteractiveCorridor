version: "3.8"
services:
  backend:
    build: ./Backend/
    ports:
      - "${BACKEND_PORT}:3000"
    restart: always
    env_file:
      - .env
    #    labels:
    #      - "traefik.enable=true"
    #      - "traefik.http.services.backend.loadbalancer.server.port=3000"
    #      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
    #      - "traefik.http.routers.backend.entrypoints=http"

  website:
    build:
      context: ./website/
      args:
        VITE_BACKEND_URL: "${BACKEND_URL}:${BACKEND_PORT}"
    restart: always
    env_file:
      - ./.env
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    #   labels:
    #     - "traefik.enable=true"
    #     - "traefik.http.services.website.loadbalancer.server.port=8000"
    ##     - "traefik.http.routers.website.rule=PathPrefix(`/`)"
    #     - "traefik.http.routers.website.entrypoints=http"
    #     - "traefik.http.services.website.loadbalancer.server.port=80"

  database:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "${MYSQL_ALLOW_EMPTY_PASSWORD}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MQTT_HOST: "${MQTT_HOST}"
      MQTT_PORT: "${MQTT_PORT}"
    volumes:
      - db_data:/var/lib/mysql

#  traefik:
#    image: "traefik:v2.5"
#    restart: always
#    command:
#      - "--providers.docker=true"
#      - "--api.dashboard=true"
#      - "--api.insecure=true"
#      - "--log.level=WARN"
##    ports:
#      - "80:80" # HTTP
#      - "443:443" # HTTPS
#      - "8080:8080" # Traefik dashboard
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  db_data:
